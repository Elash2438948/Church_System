# Generated by Django 5.2.1 on 2025-07-28 12:55

import core.models
import django.contrib.auth.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Diocese',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Diocese',
                'verbose_name_plural': 'Dioceses',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Fellowship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fellowship',
                'verbose_name_plural': 'Fellowships',
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', core.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Circuit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('diocese', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='circuits', to='core.diocese')),
            ],
            options={
                'verbose_name': 'Circuit',
                'verbose_name_plural': 'Circuits',
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('circuit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='core.circuit')),
                ('diocese', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branch_diocese', to='core.diocese')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/members/')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('contact', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('dob', models.DateField()),
                ('nationality', models.CharField(max_length=100)),
                ('hometown', models.CharField(max_length=100)),
                ('postal_address', models.TextField(blank=True)),
                ('languages', models.CharField(blank=True, max_length=255)),
                ('member_status', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Distant', 'Distant')], max_length=10)),
                ('group', models.CharField(choices=[('Dagadu', 'Dagadu'), ('Clegg', 'Clegg'), ('Kittoe', 'Kittoe'), ('Wesley', 'Wesley')], max_length=10)),
                ('date_of_admission', models.DateField()),
                ('leadership_status', models.CharField(choices=[('Current Officer', 'Current Officer'), ('Member', 'Member'), ('Past Officer', 'Past Officer')], max_length=15)),
                ('current_position', models.CharField(blank=True, max_length=100)),
                ('position_start_date', models.DateField(blank=True, null=True)),
                ('position_end_date', models.DateField(blank=True, null=True)),
                ('employment_status', models.CharField(choices=[('Yes', 'Employed'), ('No', 'Unemployed')], max_length=3)),
                ('employed_type', models.CharField(blank=True, choices=[('Self Employed', 'Self Employed'), ('Employee', 'Employee')], max_length=15)),
                ('employer', models.CharField(blank=True, max_length=255)),
                ('current_position_employment', models.CharField(blank=True, max_length=100)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('unemployment_details', models.CharField(blank=True, max_length=100)),
                ('education_level', models.CharField(blank=True, max_length=50)),
                ('institution', models.CharField(blank=True, max_length=255)),
                ('completion_year', models.CharField(blank=True, max_length=4)),
                ('profession', models.CharField(blank=True, max_length=100)),
                ('vocation', models.CharField(blank=True, max_length=100)),
                ('relationship_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Widowed', 'Widowed')], max_length=10)),
                ('spouse_name', models.CharField(blank=True, max_length=255)),
                ('spouse_contact', models.CharField(blank=True, max_length=15)),
                ('number_of_children', models.PositiveIntegerField(blank=True, default=0)),
                ('closest_relative_contact', models.CharField(blank=True, max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='member_family', to='core.branch')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Member',
                'verbose_name_plural': 'Members',
            },
        ),
        migrations.CreateModel(
            name='FinancialTransactions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_date', models.DateField()),
                ('type', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_transactions', to='core.member')),
            ],
            options={
                'verbose_name': 'Financial Transaction',
                'verbose_name_plural': 'Financial Transactions',
            },
        ),
        migrations.CreateModel(
            name='Donations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('donation_date', models.DateField()),
                ('fund', models.CharField(max_length=255)),
                ('payment_method', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_donations', to='core.member')),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
            },
        ),
        migrations.CreateModel(
            name='Delegates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegates_events', to='core.event')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegates', to='core.member')),
            ],
            options={
                'verbose_name': 'Delegate',
                'verbose_name_plural': 'Delegates',
            },
        ),
        migrations.CreateModel(
            name='Communications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_recipients', to='core.member')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empoyee_sender', to='core.member')),
            ],
            options={
                'verbose_name': 'Communication',
                'verbose_name_plural': 'Communications',
            },
        ),
        migrations.CreateModel(
            name='MinisterialVisits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField()),
                ('notes', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ministerial_visits', to='core.member')),
            ],
            options={
                'verbose_name': 'Ministerial Visit',
                'verbose_name_plural': 'Ministerial Visits',
            },
        ),
        migrations.CreateModel(
            name='PrayerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('request_date', models.DateField()),
                ('status', models.CharField(choices=[('Received', 'Received'), ('Read', 'Read')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_prayers', to='core.member')),
            ],
            options={
                'verbose_name': 'Prayer Request',
                'verbose_name_plural': 'Prayer Requests',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('role_type', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('user', 'User')], default='user', max_length=50, verbose_name='role_type')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission', verbose_name='permissions')),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, help_text='The roles this user has. A user will get all permissions granted to each of their roles.', related_name='user_set', related_query_name='user_set', to='core.role', verbose_name='roles'),
        ),
        migrations.CreateModel(
            name='VolunteerAssignments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('fellowship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_assignments', to='core.fellowship')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_members', to='core.member')),
            ],
            options={
                'verbose_name': 'Volunteer Assignment',
                'verbose_name_plural': 'Volunteer Assignments',
            },
        ),
    ]
